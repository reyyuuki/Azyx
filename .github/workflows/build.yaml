name: Build and Release Azyx

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"

      - name: Download and Install CMake 3.18.1
        run: |
          # Create cmake directory
          mkdir -p $HOME/cmake
          cd $HOME/cmake

          # Download CMake 3.18.1 for Linux x86_64
          wget https://github.com/Kitware/CMake/releases/download/v3.18.1/cmake-3.18.1-Linux-x86_64.tar.gz

          # Extract the archive
          tar -xzf cmake-3.18.1-Linux-x86_64.tar.gz

          # Create symlink for easier access
          ln -s $HOME/cmake/cmake-3.18.1-Linux-x86_64/bin/cmake $HOME/cmake/cmake

          # Verify installation
          $HOME/cmake/cmake-3.18.1-Linux-x86_64/bin/cmake --version

      - name: Setup CMake path in local.properties
        run: |
          CMAKE_DIR="$HOME/cmake/cmake-3.18.1-Linux-x86_64"
          echo "cmake.dir=$CMAKE_DIR" >> android/local.properties
          echo "CMake directory set to: $CMAKE_DIR"
          cat android/local.properties
      
      - name: Download keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: echo "$KEYSTORE_BASE64" | base64 --decode > azyx.jks

      - name: Set up signing variables
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          echo "storePassword=$KEYSTORE_PASSWORD" > android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "storeFile=azyx.jks" >> android/key.properties
      
      - name: Setup .env File
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
          MAL_CLIENT_SECRET: ${{ secrets.MAL_CLIENT_SECRET }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL }}
        run: |
          echo "CLIENT_ID=$CLIENT_ID" > .env
          echo "CLIENT_SECRET=$CLIENT_SECRET" >> .env
          echo "MAL_CLIENT_ID=$MAL_CLIENT_ID" >> .env
          echo "MAL_CLIENT_SECRET=$MAL_CLIENT_SECRET" >> .env
          echo "REDIRECT_URL=$REDIRECT_URL" >> .env

      - name: Get Dependencies
        run: flutter pub get

      - name: Build Android with Split ABI
        run: flutter build apk --split-per-abi

      - name: Rename APKs
        run: |
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/Azyx-Android-armeabi-v7a.apk
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/Azyx-Android-arm64.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/Azyx-Android-x86_64.apk

      - name: Build Universal APK
        run: flutter build apk --release

      - name: Rename Universal APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/Azyx-Android-universal.apk

      - name: Release Android APKs
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/Azyx-Android-*.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"
        
      - name: Setup .env File
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
          MAL_CLIENT_SECRET: ${{ secrets.MAL_CLIENT_SECRET }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL }}
        run: |
          echo "CLIENT_ID=$CLIENT_ID" > .env
          echo "CLIENT_SECRET=$CLIENT_SECRET" >> .env
          echo "MAL_CLIENT_ID=$MAL_CLIENT_ID" >> .env
          echo "MAL_CLIENT_SECRET=$MAL_CLIENT_SECRET" >> .env
          echo "REDIRECT_URL=$REDIRECT_URL" >> .env
      - name: Get Dependencies
        run: flutter pub get

      - name: Build iOS
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir -p Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r Azyx-iOS-${{ github.ref_name }}.ipa Payload
          mv Azyx-iOS-${{ github.ref_name }}.ipa ../../../

      - name: Release iOS IPA
        uses: ncipollo/release-action@v1
        with:
          artifacts: "Azyx-iOS-*.ipa"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install webkit2g32.8.1 clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"

      - name: Setup .env File
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
          MAL_CLIENT_SECRET: ${{ secrets.MAL_CLIENT_SECRET }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL }}
        run: |
          echo "CLIENT_ID=$CLIENT_ID" > .env
          echo "CLIENT_SECRET=$CLIENT_SECRET" >> .env
          echo "MAL_CLIENT_ID=$MAL_CLIENT_ID" >> .env
          echo "MAL_CLIENT_SECRET=$MAL_CLIENT_SECRET" >> .env
          echo "REDIRECT_URL=$REDIRECT_URL" >> .env

      - name: Get Dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux --release

      - name: Zip Linux Artifacts
        run: |
          cd build/linux/x64/release
          cp ../../../../linux-fix/* bundle/lib/
          zip -r ../../../../Azyx-Linux.zip .

      - name: Release Linux Build
        uses: ncipollo/release-action@v1
        with:
          artifacts: "Azyx-Linux.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"

      - name: Setup .env File
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
          MAL_CLIENT_SECRET: ${{ secrets.MAL_CLIENT_SECRET }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL }}
        run: |
          echo "CLIENT_ID=$CLIENT_ID" > .env
          echo "CLIENT_SECRET=$CLIENT_SECRET" >> .env
          echo "MAL_CLIENT_ID=$MAL_CLIENT_ID" >> .env
          echo "MAL_CLIENT_SECRET=$MAL_CLIENT_SECRET" >> .env
          echo "REDIRECT_URL=$REDIRECT_URL" >> .env
        
      - name: Get Dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Create ZIP file for Windows Build
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath Azyx-Windows.zip

      - name: Release Windows Builds
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/windows/x64/runner/Release/Azyx-Windows.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"

      - name: Replace auth provider 
        run: |
          mv lib/auth/auth_provider_macos.dart lib/auth/auth_provider.dart
          mv pubspec_macos.yaml pubspec.yaml

      - name: Get Dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos --release

      - name: Create DMG file for macOS Build
        run: |
          mkdir -p build/macos/Release
          hdiutil create -volname "Azyx" -srcfolder build/macos/Build/Products/Release/Azyx.app -ov -format UDZO build/macos/Release/Azyx.dmg

      - name: Release macOS Builds
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/macos/Release/Azyx.dmg"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: ${{ github.ref_name }}

  generate-changelog:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-linux]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          #!/bin/bash
          PREVIOUS_TAG=$(git tag --sort=-v:refname | grep -vE '(-alpha|-beta|-rc)' | head -n 2 | tail -n 1)
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          if [ -z "$PREVIOUS_TAG" ]; then
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi

          # Initialize changelog with the current tag as the version
          echo "# Changelog" > CHANGELOG.md
          echo "## $CURRENT_TAG" >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          # Function to add section if commits exist
          add_section() {
            local section_title="$1"
            local grep_pattern="$2"
            local commits=$(git log $PREVIOUS_TAG..$CURRENT_TAG --grep="$grep_pattern" --pretty=format:'* [`%h`](https://github.com/reyyuuki/Azyx/commit/%h): %s')
            
            if [ ! -z "$commits" ]; then
              echo "## $section_title" >> CHANGELOG.md
              echo "$commits" >> CHANGELOG.md
              echo "" >> CHANGELOG.md
            fi
          }

          # Add sections dynamically
          add_section "🎉 New Features" "^feat:"
          add_section "🛠️ Bug Fixes & Improvements" "^fix:"
          add_section "🔧 Refactors" "^refactor:"
          add_section "🎨 Style Changes" "^style:"
          add_section "🚀 Performance Improvements" "^perf:"
          add_section "🧹 Chores & Documentation" "^(chore|docs):"

          # Output the generated changelog
          cat CHANGELOG.md
          
      - name: Update Release with Changelog
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
